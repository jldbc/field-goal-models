dat = read.csv("imputed_kicker_data.csv")
library(caret)
library(ggplot2)
dat = read.csv("kicker_data_updated2.csv")
dat = read.csv("../imputed_kicker_data.csv")
dat = read.csv("/../imputed_kicker_data.csv")
dat = read.csv("imputed_kicker_data.csv")
ggplot(dat) + geom_smooth(aes(x=dist, y=good), size = 1, data = dat[dat$cold == 1, ], ) +
geom_smooth(aes(x=dist, y=good), size = 1, data = dat[dat$cold == 0, ], colour="red")
ggplot(dat) + geom_smooth(aes(x=dist, y=good), size = 1, data = dat[dat$Sports.Authority.Field.at.Mile.High ==1,], ) +
geom_smooth(aes(x=dist, y=good), size = 1, data = dat, colour="red")
ggplot(dat) + geom_smooth(aes(x=dist, y=good), size = 1, data = dat, ) +
geom_smooth(aes(x=dist, y=good), size = 1, data = dat[dat$iced == 1, ], colour="red")
ggplot(dat) + geom_smooth(aes(x=dist, y=good), size = 1, data = dat, ) +
geom_smooth(aes(x=dist, y=good), size = 1, data = dat[dat$humid == 1, ], colour="red")
ggplot(dat) + geom_smooth(aes(x=dist, y=good), size = 1, data = dat, ) +
geom_smooth(aes(x=dist, y=good), size = 1, data = dat[dat$Snow == 1, ], colour="red")
ggplot(dat) + geom_smooth(aes(x=dist, y=good), size = 1, data = dat[dat$precip == 0, ], ) +
geom_smooth(aes(x=dist, y=good), size = 1, data = dat[dat$precip == 1, ], colour="red")
ggplot(dat) + geom_smooth(aes(x=dist, y=good), size = 1, data = dat[dat$windy==0, ], ) +
geom_smooth(aes(x=dist, y=good), size = 1, data = dat[dat$windy ==1, ], colour="red")
ggplot(dat) + geom_smooth(aes(x=dist, y=good), size = 1, data = dat, )
ggplot(dat) + geom_smooth(aes(x=dist, y=good), size = 1, data = dat, ) +
scale_x_continuous(breaks = round(seq(min(15), max(dat$dist), by = 5),1)) +
scale_y_continuous(breaks=round(seq(min(0), max(1), by=.05), 1))
ggplot(dat) + geom_smooth(aes(x=dist, y=good), size = 1, data = dat, ) +
scale_x_continuous(breaks = round(seq(min(15), max(65), by = 5),1)) +
scale_y_continuous(breaks=round(seq(min(0), max(1), by=.05), 1))
qplot(dat) + geom_smooth(aes(x=dist, y=good), size = 1, data = dat, ) +
scale_x_continuous(breaks = round(seq(min(15), max(65), by = 5),1)) +
scale_y_continuous(breaks=round(seq(min(0), max(1), by=.05), 1))
qplot(x=dat$dist, y=dat$good) + geom_smooth(aes(x=dist, y=good), size = 1, data = dat, ) +
scale_x_continuous(breaks = round(seq(min(15), max(65), by = 5),1)) +
scale_y_continuous(breaks=round(seq(min(0), max(1), by=.05), 1))
#all
ggplot(dat) + geom_smooth(aes(x=dist, y=good), data = dat, ) +
scale_x_continuous(breaks = round(seq(min(15), max(65), by = 5),1)) +
scale_y_continuous(breaks=round(seq(min(0), max(1), by=.05), 1))
ggplot(dat) + geom_smooth(aes(x=dist, y=good), size = 1, data = dat, ) +
scale_x_continuous(breaks = round(seq(min(15), max(65), by = 5),1)) +
scale_y_continuous(breaks=round(seq(min(0), max(1), by=.05), 1)) + xlim(15, 65)
ggplot(dat) + geom_smooth(aes(x=dist, y=good), size = 1, data = dat[dat$windy==0, ], ) +
geom_smooth(aes(x=dist, y=good), size = 1, data = dat[dat$windy ==1, ], colour="red")
#windspeed
ggplot(dat) + geom_smooth(aes(x=dist, y=good), size = 1, data = dat[dat$windy==0, ], ) +
geom_smooth(aes(x=dist, y=good), size = 1, data = dat[dat$windy ==1, ], colour="red")+ xlim(15, 65)
ggplot(dat) + geom_smooth(aes(x=dist, y=good), size = 1, data = dat[dat$windy==0, ], ) +
geom_smooth(aes(x=dist, y=good), size = 1, data = dat[dat$windy ==1, ], colour="red")+ xlim(15, 65) + ylim(0,1)
ggplot(dat) + geom_smooth(aes(x=dist, y=good), size = 1, data = dat[dat$turf == 0, ], ) +
geom_smooth(aes(x=dist, y=good), size = 1, data = dat[dat$turf == 1, ], colour="red")+ xlim(15, 65) + ylim(0,1)
ggplot(dat) + geom_smooth(aes(x=dist, y=good), size = 1, data = dat[dat$precip == 0, ], ) +
geom_smooth(aes(x=dist, y=good), size = 1, data = dat[dat$precip == 1, ], colour="red")+ xlim(15, 65) + ylim(0,1)
ggplot(dat) + geom_smooth(aes(x=dist, y=good), size = 1, data = dat, ) +
geom_smooth(aes(x=dist, y=good), size = 1, data = dat[dat$iced == 1, ], colour="red") + xlim(15, 65) + ylim(0,1)
ggplot(dat) + geom_smooth(aes(x=dist, y=good), size = 1, data = dat[dat$Sports.Authority.Field.at.Mile.High ==1,], ) +
geom_smooth(aes(x=dist, y=good), size = 1, data = dat, colour="red") + xlim(15, 65) + ylim(0,1)
#ic
ggplot(dat) + geom_smooth(aes(x=dist, y=good), size = 1, data = dat[dat$mileHigh ==1,], ) +
geom_smooth(aes(x=dist, y=good), size = 1, data = dat, colour="red") + xlim(15, 65) + ylim(0,1)
ggplot(dat) + geom_smooth(aes(x=dist, y=good), size = 1, data = dat[dat$cold == 1, ], ) +
geom_smooth(aes(x=dist, y=good), size = 1, data = dat[dat$cold == 0, ], colour="red") + xlim(15, 65) + ylim(0,1)
dat <- read.csv("imputed_kicker_data.csv")
dat <- read.csv("imputed_kicker_data.csv")
#logistic regression models
#my favorite model (replication + iced)
fit1 <- glm(good ~ dist + cold + precip + windy + iced + turf + mileHigh , data=dat, family = "binomial")
summary(fit1)
summary(fit1)$coefficients
#exact replication (no iced)
fit2 <- glm(good ~ dist + cold + precip + windy + turf + mileHigh , data=dat, family = "binomial")
summary(fit2)
summary(fit2)$coefficients
#checking stadium significance
fitStadiums <- glm(good ~ dist + cold + precip + windy + iced + turf + mileHigh + Adelphia.Coliseum + Giants.Stadium  + Network.Associates.Coliseum + Paul.Brown.Stadium  + Ralph.Wilson.Stadium  +  Texas.Stadium + The.Meadowlands  + Veterans.Stadium , data=dat, family = "binomial")
summary(fitStadiums)
summary(fitStadiums)$coefficients
#show model's expected probabilities of kicks in data set
preds = predict(fit1, dat, type="response")
qplot(x=dat$dist, y=preds, color="red") + guides(colour=FALSE) +
scale_x_continuous(breaks = round(seq(min(15), max(dat$dist), by = 5),1)) +
scale_y_continuous(breaks=round(seq(min(0), max(1), by=.05), 1))
library(ggplot2)
preds = predict(fit1, dat, type="response")
qplot(x=dat$dist, y=preds, color="red") + guides(colour=FALSE) +
scale_x_continuous(breaks = round(seq(min(15), max(dat$dist), by = 5),1)) +
scale_y_continuous(breaks=round(seq(min(0), max(1), by=.05), 1))
preds = predict(fit2, dat, type="response")
qplot(x=dat$dist, y=preds, color="red") + guides(colour=FALSE) +
scale_x_continuous(breaks = round(seq(min(15), max(dat$dist), by = 5),1)) +
scale_y_continuous(breaks=round(seq(min(0), max(1), by=.05), 1))
qplot(x=dat$dist, y=preds, color="red",cex.axis = 1.5) + guides(colour=FALSE) +
scale_x_continuous(breaks = round(seq(min(15), max(dat$dist), by = 5),1)) +
scale_y_continuous(breaks=round(seq(min(0), max(1), by=.05), 1))
qplot(x=dat$dist, y=preds, color="red", cex.lab = 2,cex.axis = 1.5) + guides(colour=FALSE) +
scale_x_continuous(breaks = round(seq(min(15), max(dat$dist), by = 5),1)) +
scale_y_continuous(breaks=round(seq(min(0), max(1), by=.05), 1))
qplot(x=dat$dist, y=preds, color="red", cex.lab = 2,cex.axis = 1.5, cex.main=3) + guides(colour=FALSE) +
scale_x_continuous(breaks = round(seq(min(15), max(dat$dist), by = 5),1)) +
scale_y_continuous(breaks=round(seq(min(0), max(1), by=.05), 1))
qplot(x=dat$dist, y=preds, color="red", cex.lab = 2,cex.axis = 5.5) + guides(colour=FALSE) +
scale_x_continuous(breaks = round(seq(min(15), max(dat$dist), by = 5),1)) +
scale_y_continuous(breaks=round(seq(min(0), max(1), by=.05), 1))
qplot(x=dat$dist, y=preds, color="red") + guides(colour=FALSE) +
scale_x_continuous(breaks = round(seq(min(15), max(dat$dist), by = 5),1)) +
scale_y_continuous(breaks=round(seq(min(0), max(1), by=.05), 1))
qplot(x=dat$dist, y=preds, color="red") + guides(colour=FALSE) +
scale_x_continuous(breaks = round(seq(min(15), max(dat$dist), by = 5),1)) +
scale_y_continuous(breaks=round(seq(min(0), max(1), by=.05), 1)) +
theme(axis.text.x = element_text(face="bold",
size=14, angle=45),  axis.text.y = element_text(face="bold", size=14, angle=45))
qplot(x=dat$dist, y=preds, color="red") + guides(colour=FALSE) +
scale_x_continuous(breaks = round(seq(min(15), max(dat$dist), by = 5),1)) +
scale_y_continuous(breaks=round(seq(min(0), max(1), by=.05), 1)) +
theme(axis.text.x = element_text(face="bold",
size=14, angle=45),  axis.text.y = element_text(face="bold", size=14))
qplot(x=dat$dist, y=preds, color="red") + guides(colour=FALSE) +
scale_x_continuous(breaks = round(seq(min(15), max(dat$dist), by = 5),1)) +
scale_y_continuous(breaks=round(seq(min(0), max(1), by=.05), 1)) +
theme(axis.text.x = element_text(face="bold",
size=14),  axis.text.y = element_text(face="bold", size=14))
probability = predict(fit2, dat, type="response")
distance = dat$dist
qplot(x=distance, y=probability, color="red") + guides(colour=FALSE) +
scale_x_continuous(breaks = round(seq(min(15), max(dat$dist), by = 5),1)) +
scale_y_continuous(breaks=round(seq(min(0), max(1), by=.05), 1)) +
theme(axis.text.x = element_text(face="bold",
size=14),  axis.text.y = element_text(face="bold", size=14))
qplot(x=distance, y=probability, color="red") + guides(colour=FALSE) +
scale_x_continuous(breaks = round(seq(min(15), max(dat$dist), by = 5),1)) +
scale_y_continuous(breaks=round(seq(min(0), max(1), by=.05), 1)) +
theme(axis.text.x = element_text(face="bold",
size=14),  axis.text.y = element_text(face="bold", size=14),
axis.title.x = element_text(size=18,face="bold"),
axis.title.y = element_text(size=18,face="bold"))
qplot(x=distance, y=probability, color="red") + guides(colour=FALSE) +
scale_x_continuous(breaks = round(seq(min(15), max(dat$dist), by = 5),1)) +
scale_y_continuous(breaks=round(seq(min(0), max(1), by=.05), 1)) +
theme(axis.text.x = element_text(face="bold",
size=14),  axis.text.y = element_text(face="bold", size=14),
axis.title.x = element_text(size=16,face="bold"),
axis.title.y = element_text(size=16,face="bold"))
game1 <- data.frame(cold=1, precip=1, windy=1, iced=1, turf=0, mileHigh=0)
game1 <- game1[rep(seq_len(nrow(game1)), each=65),]
game1$dist<-seq.int(nrow(game1))
game2 <- data.frame(cold=0, precip=0, windy=0, iced=1, turf=0, mileHigh=0)
game2 <- game2[rep(seq_len(nrow(game2)), each=65),]
game2$dist<-seq.int(nrow(game2))
#non-iced model
predsa = predict(fit2, game1, type="response")
predsb = predict(fit2, game2, type="response")
game1$pred <- predsa
game2$pred <- predsb
predsaa <- data.frame(game1$dist)
predsaa$preda <- predsa
predsaa <- rename(predsaa, c("game1.dist"="dist"))
predsbb <- data.frame(game2$dist)
predsbb$predb <- predsb
predsbb <- rename(predsbb, c("game2.dist"="dist"))
predsaa$predb <- predsbb$predb
predsaa <- melt(predsaa, id="dist")
library(ggplot2)
library(reshape2)
#logistic regression models
#my favorite model (replication + iced)
fit1 <- glm(good ~ dist + cold + precip + windy + iced + turf + mileHigh , data=dat, family = "binomial")
summary(fit1)
summary(fit1)$coefficients
#exact replication (no iced)
fit2 <- glm(good ~ dist + cold + precip + windy + turf + mileHigh , data=dat, family = "binomial")
summary(fit2)
summary(fit2)$coefficients
#checking stadium significance
fitStadiums <- glm(good ~ dist + cold + precip + windy + iced + turf + mileHigh + Adelphia.Coliseum + Giants.Stadium  + Network.Associates.Coliseum + Paul.Brown.Stadium  + Ralph.Wilson.Stadium  +  Texas.Stadium + The.Meadowlands  + Veterans.Stadium , data=dat, family = "binomial")
summary(fitStadiums)
summary(fitStadiums)$coefficients
#show model's expected probabilities of kicks in data set
probability = predict(fit2, dat, type="response")
distance = dat$dist
qplot(x=distance, y=probability, color="red") + guides(colour=FALSE) +
scale_x_continuous(breaks = round(seq(min(15), max(dat$dist), by = 5),1)) +
scale_y_continuous(breaks=round(seq(min(0), max(1), by=.05), 1)) +
theme(axis.text.x = element_text(face="bold",
size=14),  axis.text.y = element_text(face="bold", size=14),
axis.title.x = element_text(size=16,face="bold"),
axis.title.y = element_text(size=16,face="bold"))
#situational comparison 1 (from MIT paper): Patriots 2002 in NE vs in OAK
game1 <- data.frame(cold=1, precip=1, windy=1, iced=1, turf=0, mileHigh=0)
game1 <- game1[rep(seq_len(nrow(game1)), each=65),]
game1$dist<-seq.int(nrow(game1))
game2 <- data.frame(cold=0, precip=0, windy=0, iced=1, turf=0, mileHigh=0)
game2 <- game2[rep(seq_len(nrow(game2)), each=65),]
game2$dist<-seq.int(nrow(game2))
#non-iced model
predsa = predict(fit2, game1, type="response")
predsb = predict(fit2, game2, type="response")
game1$pred <- predsa
game2$pred <- predsb
predsaa <- data.frame(game1$dist)
predsaa$preda <- predsa
predsaa <- rename(predsaa, c("game1.dist"="dist"))
predsbb <- data.frame(game2$dist)
predsbb$predb <- predsb
predsbb <- rename(predsbb, c("game2.dist"="dist"))
predsaa$predb <- predsbb$predb
predsaa <- melt(predsaa, id="dist")
ggplot(data=predsaa,
aes(x=dist, y=value, colour=variable)) +
geom_line() + scale_x_continuous(limits = c(15, 65),breaks = round(seq(min(15), max(predsaa$dist), by = 5),1)) +
scale_y_continuous(breaks=round(seq(min(0), max(predsaa$value), by=.05), 1)) +
scale_colour_manual(
values = c("predb" = "red", "preda" = "blue"), labels = c("Game at OAK", "Game at NE"),
breaks=c("predb","preda")) +
theme(axis.text.x = element_text(face="bold",
size=14),  axis.text.y = element_text(face="bold", size=14),
axis.title.x = element_text(size=16,face="bold"),
axis.title.y = element_text(size=16,face="bold"))
library(plyr)
#logistic regression models
#my favorite model (replication + iced)
fit1 <- glm(good ~ dist + cold + precip + windy + iced + turf + mileHigh , data=dat, family = "binomial")
summary(fit1)
summary(fit1)$coefficients
#exact replication (no iced)
fit2 <- glm(good ~ dist + cold + precip + windy + turf + mileHigh , data=dat, family = "binomial")
summary(fit2)
summary(fit2)$coefficients
#checking stadium significance
fitStadiums <- glm(good ~ dist + cold + precip + windy + iced + turf + mileHigh + Adelphia.Coliseum + Giants.Stadium  + Network.Associates.Coliseum + Paul.Brown.Stadium  + Ralph.Wilson.Stadium  +  Texas.Stadium + The.Meadowlands  + Veterans.Stadium , data=dat, family = "binomial")
summary(fitStadiums)
summary(fitStadiums)$coefficients
#show model's expected probabilities of kicks in data set
probability = predict(fit2, dat, type="response")
distance = dat$dist
qplot(x=distance, y=probability, color="red") + guides(colour=FALSE) +
scale_x_continuous(breaks = round(seq(min(15), max(dat$dist), by = 5),1)) +
scale_y_continuous(breaks=round(seq(min(0), max(1), by=.05), 1)) +
theme(axis.text.x = element_text(face="bold",
size=14),  axis.text.y = element_text(face="bold", size=14),
axis.title.x = element_text(size=16,face="bold"),
axis.title.y = element_text(size=16,face="bold"))
#situational comparison 1 (from MIT paper): Patriots 2002 in NE vs in OAK
game1 <- data.frame(cold=1, precip=1, windy=1, iced=1, turf=0, mileHigh=0)
game1 <- game1[rep(seq_len(nrow(game1)), each=65),]
game1$dist<-seq.int(nrow(game1))
game2 <- data.frame(cold=0, precip=0, windy=0, iced=1, turf=0, mileHigh=0)
game2 <- game2[rep(seq_len(nrow(game2)), each=65),]
game2$dist<-seq.int(nrow(game2))
#non-iced model
predsa = predict(fit2, game1, type="response")
predsb = predict(fit2, game2, type="response")
game1$pred <- predsa
game2$pred <- predsb
predsaa <- data.frame(game1$dist)
predsaa$preda <- predsa
predsaa <- rename(predsaa, c("game1.dist"="dist"))
predsbb <- data.frame(game2$dist)
predsbb$predb <- predsb
predsbb <- rename(predsbb, c("game2.dist"="dist"))
predsaa$predb <- predsbb$predb
predsaa <- melt(predsaa, id="dist")
ggplot(data=predsaa,
aes(x=dist, y=value, colour=variable)) +
geom_line() + scale_x_continuous(limits = c(15, 65),breaks = round(seq(min(15), max(predsaa$dist), by = 5),1)) +
scale_y_continuous(breaks=round(seq(min(0), max(predsaa$value), by=.05), 1)) +
scale_colour_manual(
values = c("predb" = "red", "preda" = "blue"), labels = c("Game at OAK", "Game at NE"),
breaks=c("predb","preda")) +
theme(axis.text.x = element_text(face="bold",
size=14),  axis.text.y = element_text(face="bold", size=14),
axis.title.x = element_text(size=16,face="bold"),
axis.title.y = element_text(size=16,face="bold"))
